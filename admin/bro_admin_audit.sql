create or replace type t_echipament as object (
      id_echipament  int,
      nume           varchar2(40),
      data_instalare date,
      data_revizie   date,
      id_filiala     int,
      id_furnizor    int
);
/

create table audit_echipament (
   id_audit        int
      generated by default as identity
   primary key,
   log_time        timestamp default systimestamp,
   operation_type  varchar2(15),
   performed_by    varchar2(128),
   id_echipament   int,
   old_values      t_echipament,
   new_values      t_echipament,
   summary_message varchar2(2500)
);



create or replace trigger audit_echipament_trg for
   insert or update or delete on echipament
compound trigger
   type t_row_change is record (
         operation_type varchar2(15),
         id_echipament  int,
         old_values     t_echipament,
         new_values     t_echipament
   );
   type t_change_table is
      table of t_row_change index by pls_integer;
   g_changes  t_change_table;
   g_count_op int := 0;
   before each row is begin
      if inserting then
         g_count_op := g_count_op + 1;
         g_changes(g_changes.count + 1) := t_row_change(
            'INSERT',
            :new.id_echipament,
            null,
            t_echipament(
               :new.id_echipament,
               :new.nume,
               :new.data_instalare,
               :new.data_revizie,
               :new.id_filiala,
               :new.id_furnizor
            )
         );
      elsif updating then
         g_count_op := g_count_op + 1;
         g_changes(g_changes.count + 1) := t_row_change(
            'UPDATE',
            :new.id_echipament,
            t_echipament(
               :old.id_echipament,
               :old.nume,
               :old.data_instalare,
               :old.data_revizie,
               :old.id_filiala,
               :old.id_furnizor
            ),
            t_echipament(
               :new.id_echipament,
               :new.nume,
               :new.data_instalare,
               :new.data_revizie,
               :new.id_filiala,
               :new.id_furnizor
            )
         );
      elsif deleting then
         g_count_op := g_count_op + 1;
         g_changes(g_changes.count + 1) := t_row_change(
            'DELETE',
            :old.id_echipament,
            t_echipament(
               :old.id_echipament,
               :old.nume,
               :old.data_instalare,
               :old.data_revizie,
               :old.id_filiala,
               :old.id_furnizor
            ),
            null
         );
      end if;
   end before each row;
   after statement is begin
      for i in 1..g_changes.count loop
         insert into audit_echipament (
            operation_type,
            performed_by,
            id_echipament,
            old_values,
            new_values,
            summary_message
         ) values ( g_changes(i).operation_type,
                    user,
                    g_changes(i).id_echipament,
                    g_changes(i).old_values,
                    g_changes(i).new_values,
                    upper(g_changes(i).operation_type)
                    || ' with another '
                    || g_count_op );
      end loop;
   end after statement;
end;
/

select * from audit_echipament;

select a.old_values.data_revizie, a.new_values.data_revizie from audit_echipament a;

grant select,update on audit_echipament to bro_manager_filiala1; 


select count(*)
from audit_echipament a 
where a.old_values.id_filiala!=1 and a.new_values.id_filiala!=1;

